<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.linn.home.dao.ArticleDao">
    <resultMap id="articleResultMap" type="com.linn.home.entity.Article">
        <id property="id" column="id" />
        <result property="categoryId" column="category_id"/>
        <result property="title" column="title"/>
        <result property="author" column="author"/>
        <result property="intro" column="intro"/>
        <result property="content" column="content"/>
        <result property="gmtCreate" column="gmt_create"/>
        <result property="gmtModified" column="gmt_modified"/>
        <result property="sortNo" column="sort_no"/>
        <result property="allowComment" column="allow_comment"/>
        <result property="isStick" column="is_stick"/>
        <result property="isDraft" column="is_draft"/>
        <result property="isDeleted" column="is_deleted"/>
    </resultMap>
    <resultMap id="archivesResultMap" type="com.linn.home.entity.Archive">
        <result property="date" column="pubtime"/>
        <result property="count" column="cnt"/>
    </resultMap>

    <!--后台文章管理列表-->
    <select id="findArticleListAdmin"  resultMap="articleResultMap">
        SELECT id,title,author,intro,is_stick,allow_comment,is_draft,gmt_create,gmt_modified FROM blog_article ORDER BY id DESC
    </select>

    <!--默认首页显示文章列表-->
    <select id="selectArticleList"  resultMap="articleResultMap">
        SELECT id,is_stick,title,gmt_create,intro FROM blog_article  WHERE is_draft = #{isDraft} ORDER BY is_stick DESC,id DESC
    </select>

    <!--搜索文章-->
    <select id="selectArticleBySearch"  parameterType="hashmap" resultMap="articleResultMap">
        SELECT id,is_stick,title,gmt_create,intro FROM blog_article t WHERE 1=1
        AND is_draft = #{isDraft}
        AND t.title LIKE CONCAT('%',trim(#{searchContent}),'%')
        OR t.author LIKE  CONCAT('%',trim(#{searchContent}),'%')
        OR t.intro LIKE  CONCAT('%',trim(#{searchContent}),'%')
        ORDER BY is_stick DESC,id DESC
    </select>

    <!--根据类别查找文章列表-->
    <select id="selectArticleByCategoryId"  resultMap="articleResultMap">
        SELECT id,is_stick,title,gmt_create,intro FROM blog_article WHERE category_id = #{categoryId}
        AND is_draft = #{isDraft}
        ORDER BY is_stick DESC,id DESC
    </select>

    <!--根据归档日期查找文章列表-->
    <select id="selectArticleByArchiveDate"  parameterType="hashmap" resultMap="articleResultMap">
        SELECT id,is_stick,title,gmt_create,intro FROM blog_article WHERE gmt_create &gt; #{firstDay} AND gmt_create &lt; #{lastDay}
        AND is_draft = #{isDraft}
        ORDER BY is_stick DESC,id DESC
    </select>

    <!--根据id查找文章详情-->
    <select id="selectArticleById"  parameterType="int" resultMap="articleResultMap">
        SELECT id,title,gmt_create,author,content,allow_comment FROM blog_article WHERE id = #{articleId};
    </select>

    <!--按照每月归档日期-->
    <select id="selectAllArchive" resultMap="archivesResultMap">
        SELECT DATE_FORMAT(`gmt_create`,'%Y%m') AS pubtime, COUNT(1) AS cnt FROM blog_article GROUP BY pubtime DESC
    </select>

    <!--添加文章-->
    <insert id="addArticle"  keyProperty="id">
        INSERT INTO blog_article (category_id, title,intro, author,allow_comment,is_stick, is_draft,content)
        VALUES (#{categoryId}, #{title},#{intro}, #{author}, #{allowComment},#{isStick}, #{isDraft},#{content})
    </insert>

    <!--更新文章-->
    <insert id="updateArticle"  keyProperty="id">
        UPDATE blog_article
        SET category_id  = #{categoryId}, title = #{title},intro = #{intro},author = #{author},is_stick = #{isStick},
        is_draft=#{isDraft},allow_comment=#{allowComment},content=#{content}
        WHERE id = #{id}
    </insert>

    <!--删除文章-->
    <delete id="deleteArticleById">
        DELETE FROM blog_article WHERE id = #{id}
    </delete>
</mapper>